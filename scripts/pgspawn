#!/usr/bin/env python

import argparse
import logging
import signal
import sys
import yaml

from pgspawn import PipeGraphSpawner, Graph


parser = argparse.ArgumentParser(description="Spawn graph of streaming commands.")
parser.add_argument("file", type=open, help="file containing graph description")
parser.add_argument(
    "-v", "--verbose",
    dest='verbose_count', action='count', default=0,
    help="increases log verbosity for each occurence",
)

if __name__ == '__main__':
    signal.signal(signal.SIGINT, lambda signal, frame: logging.debug("ignoring SIGINT"))

    arguments = parser.parse_args()

    # Sets log level to WARN going more verbose for each new -v.
    logging.basicConfig(
        format='%(process)d %(levelname)s: %(message)s',
        level=max(3 - arguments.verbose_count, 0) * 10,
    )

    description = yaml.load(arguments.file)
    arguments.file.close()

    pg = PipeGraphSpawner.from_graph(Graph.from_dict(description))
    pg.close_fds()
    statusses = pg.join()
    sys.exit(max(0, *statusses.values()))
